/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.jooqGen.tables.records;


import edu.java.domain.jooq.jooqGen.tables.Linkstackoverflow;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinkstackoverflowRecord extends UpdatableRecordImpl<LinkstackoverflowRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.linkstackoverflow.linkid</code>.
     */
    public void setLinkid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.linkstackoverflow.linkid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.linkstackoverflow.commentsamount</code>.
     */
    public void setCommentsamount(@Nullable Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.linkstackoverflow.commentsamount</code>.
     */
    @Nullable
    public Integer getCommentsamount() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.linkstackoverflow.answersamount</code>.
     */
    public void setAnswersamount(@Nullable Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.linkstackoverflow.answersamount</code>.
     */
    @Nullable
    public Integer getAnswersamount() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.linkstackoverflow.answered</code>.
     */
    public void setAnswered(@Nullable Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.linkstackoverflow.answered</code>.
     */
    @Nullable
    public Boolean getAnswered() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkstackoverflowRecord
     */
    public LinkstackoverflowRecord() {
        super(Linkstackoverflow.LINKSTACKOVERFLOW);
    }

    /**
     * Create a detached, initialised LinkstackoverflowRecord
     */
    @ConstructorProperties({ "linkid", "commentsamount", "answersamount", "answered" })
    public LinkstackoverflowRecord(@NotNull Long linkid, @Nullable Integer commentsamount, @Nullable Integer answersamount, @Nullable Boolean answered) {
        super(Linkstackoverflow.LINKSTACKOVERFLOW);

        setLinkid(linkid);
        setCommentsamount(commentsamount);
        setAnswersamount(answersamount);
        setAnswered(answered);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinkstackoverflowRecord
     */
    public LinkstackoverflowRecord(edu.java.domain.jooq.jooqGen.tables.pojos.Linkstackoverflow value) {
        super(Linkstackoverflow.LINKSTACKOVERFLOW);

        if (value != null) {
            setLinkid(value.getLinkid());
            setCommentsamount(value.getCommentsamount());
            setAnswersamount(value.getAnswersamount());
            setAnswered(value.getAnswered());
            resetChangedOnNotNull();
        }
    }
}
