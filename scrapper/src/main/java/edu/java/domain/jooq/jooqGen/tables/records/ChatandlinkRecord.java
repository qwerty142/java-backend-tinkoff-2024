/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.jooqGen.tables.records;


import edu.java.domain.jooq.jooqGen.tables.Chatandlink;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatandlinkRecord extends UpdatableRecordImpl<ChatandlinkRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chatandlink.linkid</code>.
     */
    public void setLinkid(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.chatandlink.linkid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.chatandlink.chatid</code>.
     */
    public void setChatid(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.chatandlink.chatid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatid() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatandlinkRecord
     */
    public ChatandlinkRecord() {
        super(Chatandlink.CHATANDLINK);
    }

    /**
     * Create a detached, initialised ChatandlinkRecord
     */
    @ConstructorProperties({ "linkid", "chatid" })
    public ChatandlinkRecord(@NotNull Long linkid, @NotNull Long chatid) {
        super(Chatandlink.CHATANDLINK);

        setLinkid(linkid);
        setChatid(chatid);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatandlinkRecord
     */
    public ChatandlinkRecord(edu.java.domain.jooq.jooqGen.tables.pojos.Chatandlink value) {
        super(Chatandlink.CHATANDLINK);

        if (value != null) {
            setLinkid(value.getLinkid());
            setChatid(value.getChatid());
            resetChangedOnNotNull();
        }
    }
}
