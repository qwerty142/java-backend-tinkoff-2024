/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.jooqGen.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Linkstackoverflow implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkid;
    private Integer commentsamount;
    private Integer answersamount;
    private Boolean answered;

    public Linkstackoverflow() {}

    public Linkstackoverflow(Linkstackoverflow value) {
        this.linkid = value.linkid;
        this.commentsamount = value.commentsamount;
        this.answersamount = value.answersamount;
        this.answered = value.answered;
    }

    @ConstructorProperties({ "linkid", "commentsamount", "answersamount", "answered" })
    public Linkstackoverflow(
        @NotNull Long linkid,
        @Nullable Integer commentsamount,
        @Nullable Integer answersamount,
        @Nullable Boolean answered
    ) {
        this.linkid = linkid;
        this.commentsamount = commentsamount;
        this.answersamount = answersamount;
        this.answered = answered;
    }

    /**
     * Getter for <code>public.linkstackoverflow.linkid</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkid() {
        return this.linkid;
    }

    /**
     * Setter for <code>public.linkstackoverflow.linkid</code>.
     */
    public void setLinkid(@NotNull Long linkid) {
        this.linkid = linkid;
    }

    /**
     * Getter for <code>public.linkstackoverflow.commentsamount</code>.
     */
    @Nullable
    public Integer getCommentsamount() {
        return this.commentsamount;
    }

    /**
     * Setter for <code>public.linkstackoverflow.commentsamount</code>.
     */
    public void setCommentsamount(@Nullable Integer commentsamount) {
        this.commentsamount = commentsamount;
    }

    /**
     * Getter for <code>public.linkstackoverflow.answersamount</code>.
     */
    @Nullable
    public Integer getAnswersamount() {
        return this.answersamount;
    }

    /**
     * Setter for <code>public.linkstackoverflow.answersamount</code>.
     */
    public void setAnswersamount(@Nullable Integer answersamount) {
        this.answersamount = answersamount;
    }

    /**
     * Getter for <code>public.linkstackoverflow.answered</code>.
     */
    @Nullable
    public Boolean getAnswered() {
        return this.answered;
    }

    /**
     * Setter for <code>public.linkstackoverflow.answered</code>.
     */
    public void setAnswered(@Nullable Boolean answered) {
        this.answered = answered;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Linkstackoverflow other = (Linkstackoverflow) obj;
        if (this.linkid == null) {
            if (other.linkid != null)
                return false;
        }
        else if (!this.linkid.equals(other.linkid))
            return false;
        if (this.commentsamount == null) {
            if (other.commentsamount != null)
                return false;
        }
        else if (!this.commentsamount.equals(other.commentsamount))
            return false;
        if (this.answersamount == null) {
            if (other.answersamount != null)
                return false;
        }
        else if (!this.answersamount.equals(other.answersamount))
            return false;
        if (this.answered == null) {
            if (other.answered != null)
                return false;
        }
        else if (!this.answered.equals(other.answered))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkid == null) ? 0 : this.linkid.hashCode());
        result = prime * result + ((this.commentsamount == null) ? 0 : this.commentsamount.hashCode());
        result = prime * result + ((this.answersamount == null) ? 0 : this.answersamount.hashCode());
        result = prime * result + ((this.answered == null) ? 0 : this.answered.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Linkstackoverflow (");

        sb.append(linkid);
        sb.append(", ").append(commentsamount);
        sb.append(", ").append(answersamount);
        sb.append(", ").append(answered);

        sb.append(")");
        return sb.toString();
    }
}
